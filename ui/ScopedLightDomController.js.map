{"version":3,"file":"ScopedLightDomController.js","sourceRoot":"","sources":["../src/ui/ScopedLightDomController.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,wBAAwB;IAInC,YAAY,IAA4B,EAAE,QAAkB;QAC1D,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;IAClC,CAAC;IAED,aAAa;QACX,MAAM,QAAQ,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAEpD,mBAAmB;QACnB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,OAAO,CAC1D,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE;YACnB,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBAC1C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;oBAC1B,mBAAmB;oBACnB,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;iBACjC;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,qBAAqB,CAAC,CAAC;iBAC/C;aACF;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,2BAA2B;QACjC,mBAAmB;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;QAClD,uDAAuD;QACvD,yEAAyE;QACzE,OAAO,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,EAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;IACvE,CAAC;CACF","sourcesContent":["import {ReactiveController, ReactiveControllerHost} from 'lit';\n\nexport class ScopedLightDomController implements ReactiveController {\n  host: ReactiveControllerHost;\n  private __lightTagNames: string[];\n\n  constructor(host: ReactiveControllerHost, tagNames: string[]) {\n    (this.host = host).addController(this);\n    this.__lightTagNames = tagNames;\n  }\n\n  hostConnected() {\n    const registry = this.__findClosestParentRegistry();\n\n    // @ts-expect-error\n    Object.entries(this.host.constructor.scopedElements).forEach(\n      ([tagName, klass]) => {\n        if (this.__lightTagNames.includes(tagName)) {\n          if (!registry.get(tagName)) {\n            // @ts-expect-error\n            registry.define(tagName, klass);\n          } else {\n            console.warn(`${tagName} already registered`);\n          }\n        }\n      }\n    );\n  }\n\n  private __findClosestParentRegistry(): CustomElementRegistry {\n    // @ts-expect-error\n    const rootNodeHost = this.host.getRootNode().host;\n    // TODO: If I'm right there is no dom tree inheritance.\n    // Else, we need to add a while loop that finds nearest ancestor registry\n    return rootNodeHost?.registry ? rootNodeHost : window.customElements;\n  }\n}\n"]}